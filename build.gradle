import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.Dockerfile

buildscript {
    ext {
        springBootVersion = '1.5.3.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'com.bmuschko:gradle-docker-plugin:3.0.6'
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.bmuschko.docker-remote-api'

ext {
    dockerPath = "${project.buildDir}/docker"
}

version = '1.0'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

bootRun {
    addResources = true
}

docker {
    url = project.properties.getOrDefault('dockerUrl', System.env.DOCKER_HOST)
    certPath = new File(project.properties.getOrDefault('certPath', System.env.DOCKER_CERT_PATH))
}

task prepareArchiveForDockerBuild(type: Copy) {
    from "${project.jar.archivePath}"
    into "$dockerPath"
}

task createDockerfile(type: Dockerfile,  dependsOn: [build, 'prepareArchiveForDockerBuild']) {
    destFile = project.file("$dockerPath/Dockerfile")

    from 'frolvlad/alpine-oraclejdk8:slim'
    volume '/tmp'
    addFile "${project.jar.archiveName}", 'app.jar'
    runCommand "sh -c 'touch /app.jar'"
//    environmentVariable 'JAVA_OPTS', " "
    entryPoint  "sh", "-c", 'java $JAVA_OPTS -Djava.security.egd=file:/dev/./urandom -jar /app.jar'
}

task buildImage(type: DockerBuildImage, dependsOn: 'createDockerfile') {
    tag = 'horzsolt/l5ddemo'
    inputDir = createDockerfile.destFile.parentFile
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-devtools')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}
